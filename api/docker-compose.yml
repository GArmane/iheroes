version: '3'


volumes:
  pgsql-db-data:
    driver: local
  pg-admin-data:
    driver: local


services:
  base: &base
    hostname: api
    image: iheroes-api
    stdin_open: true
    tty: true
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/home/python/app
    environment: &env
        ENV: "development"
        LOG_LEVEL: "debug"
        PYTHONPATH: "/home/python/app"
        DATABASE_PG_URL: "postgresql://postgres:dev1234@pgsql-db/iheroes-dev"
        HYPOTHESIS_PROFILE: "development"
        JWT_ACCESS_TOKEN_EXPIRE_MINUTES: 30
        JWT_REFRESH_TOKEN_EXPIRE_MINUTES: 43800
        JWT_ALGORITHM: "HS256"
        JWT_SECRET_KEY: "f50c515c3bd3c2155f51e79a90dc9b6721415427c73cc9e4ac3145afed92d292"
        WEB_APP_DEBUG: "true"
        WEB_APP_DESCRIPTION: "iHeroes Threat Manager API"
        WEB_APP_TITLE: "iHeroes"
        WEB_APP_VERSION: "0.0.1"
        WEB_SERVER_HOST: "0.0.0.0"
        WEB_SERVER_PORT: 8000
        WEB_SERVER_RELOAD: "true"

  api:
    <<: *base
    command: /bin/ash -c "poetry install && alembic upgrade head && poetry run web_server"
    ports:
      - "8000:8000"
    depends_on:
      - pgsql-db


  lint:
      <<: *base
      command: /bin/ash -c "poetry install && flake8 app/ tests/"


  static-analysis:
      <<: *base
      command: /bin/ash -c "poetry install && mypy app/ tests/"


  tests:
      <<: *base
      command: /bin/ash -c "poetry install && alembic upgrade head && pytest"
      environment:
        <<: *env
        ENV: "testing"
        HYPOTHESIS_PROFILE: "testing"
        DATABASE_PG_URL: "postgresql://postgres:dev1234@pgsql-db/iheroes-test"
      depends_on:
        - pgsql-db


  pgsql-db:
    hostname: pgsql-db
    image: postgres:12-alpine
    environment:
      POSTGRES_PASSWORD: "dev1234"
    ports:
      - "5432:5432"
    volumes:
      - ./scripts/pgsql-db:/docker-entrypoint-initdb.d
      - pgsql-db-data:/var/lib/postgresql/data


  pgadmin:
    hostname: pgadmin4
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "dev@dev.com"
      PGADMIN_DEFAULT_PASSWORD: "dev@1234"
    ports:
      - "6001:80"
    volumes:
      - pg-admin-data:/var/lib/pgadmin
